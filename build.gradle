buildscript {
    repositories {
        maven { url = 'https://files.minecraftforge.net/maven' }
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '3.+', changing: true
        classpath group: 'com.github.jengelman.gradle.plugins', name: 'shadow', version: '5.1.0'
    }
}

apply plugin: 'idea'
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: 'maven-publish'
apply plugin: 'java'

group = _group
archivesBaseName = _name
version = _version

tasks.withType(JavaCompile).each {
    task ->
        task.options.encoding = 'UTF-8'
        task.sourceCompatibility = task.targetCompatibility = '1.8'
}

minecraft {
    mappings channel: 'snapshot', version: '20201028-1.16.3'
    runs {
        client {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'
            mods {
                itlfts { //TODO how to use artifactName as this?
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'
            mods {
                itlfts { //TODO how to use artifactName as this?
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'
            args '--mod', project.archivesBaseName, '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')
            mods {
                itlfts { //TODO how to use artifactName as this?
                    source sourceSets.main
                }
            }
        }
    }
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

jar {
    manifest {
        attributes([
                "Specification-Title"     : project.archivesBaseName,
                "Specification-Vendor"    : project.archivesBaseName,
                "Specification-Version"   : project.version,
                "Implementation-Title"    : project.archivesBaseName,
                "Implementation-Version"  : project.version,
                "Implementation-Vendor"   : project.archivesBaseName,
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

jar.finalizedBy('reobfJar')

afterEvaluate {
    reobf {
        shadowJar {
            mappings = tasks.reobfJar.mappings
        }
    }
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.16.4-35.1.4'

    compileOnly 'org.projectlombok:lombok:1.18.12'
    annotationProcessor 'org.projectlombok:lombok:1.18.12'

//    shadow for build || implementation for ide run || todo how to make it better?

    implementation 'org.springframework:spring-beans:5.2.8.RELEASE'
    shadow 'org.springframework:spring-beans:5.2.8.RELEASE'
    implementation 'org.springframework:spring-context:5.2.8.RELEASE'
    shadow 'org.springframework:spring-context:5.2.8.RELEASE'

    implementation 'org.apache.logging.log4j:log4j-slf4j-impl:2.13.3'
    shadow 'org.apache.logging.log4j:log4j-slf4j-impl:2.13.3'
}

shadowJar {
    configurations = [project.configurations.shadow]
    archiveClassifier.set('all')
}

build.dependsOn shadowJar